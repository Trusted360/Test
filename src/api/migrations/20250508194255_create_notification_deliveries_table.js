/**
 * Migration: Create notification_deliveries table
 * Generated by simmer schema utility
 */
exports.up = function(knex) {
  return knex.schema.createTable('notification_deliveries', (table) => {
    table.uuid('id').primary();
    table.uuid('notification_id').notNullable();
    table.uuid('recipient_id').notNullable();
    table.uuid('channel_id').notNullable();
    table.string('status', 20).notNullable().defaultTo('pending');
    table.timestamp('delivered_at', { useTz: false });
    table.text('error_message');
    table.integer('retry_count').notNullable().defaultTo(0);
    table.timestamp('next_retry_at', { useTz: false });
    table.timestamp('created_at', { useTz: false }).notNullable().defaultTo(knex.fn.now());
    table.timestamp('updated_at', { useTz: false }).notNullable().defaultTo(knex.fn.now());
    table.uuid('tenant_id').notNullable();
    table.foreign('notification_id').references('id').inTable('notifications');
    table.foreign('recipient_id').references('id').inTable('notification_recipients');
    table.foreign('channel_id').references('id').inTable('notification_channels');
  });
};

exports.down = function(knex) {
  return knex.schema.dropTable('notification_deliveries');
};
